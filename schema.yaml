openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/categories/:
    get:
      operationId: listCategorys
      description: ''
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    post:
      operationId: createCategory
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/v1/categories/{id}/:
    get:
      operationId: retrieveCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Category.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    put:
      operationId: updateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Category.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Category.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Category.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/product/:
    get:
      operationId: listProducts
      description: ''
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    post:
      operationId: createProduct
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
  /api/v1/product/{id}/:
    get:
      operationId: retrieveProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    put:
      operationId: updateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/orders/:
    get:
      operationId: listOrders
      description: ''
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    post:
      operationId: createOrder
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
  /api/v1/orders/{id}/:
    get:
      operationId: retrieveOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/order_items/:
    get:
      operationId: listOrderItems
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
          description: ''
      tags:
      - api
    post:
      operationId: createOrderItem
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
      tags:
      - api
  /api/v1/order_items/{id}/:
    get:
      operationId: retrieveOrderItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order item.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrderItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrderItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrderItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order item.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 60
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - title
      - slug
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 60
        description:
          type: string
          maxLength: 1000
          pattern: ^[-a-zA-Z0-9_]+$
        image:
          type: string
          format: binary
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000
          minimum: -100000
        category:
          type: integer
      required:
      - title
      - description
      - image
      - price
      - category
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        total_price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000
          minimum: -100000
        is_paid:
          type: boolean
        user:
          type: integer
      required:
      - total_price
      - user
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 32767
          minimum: 0
        product:
          type: integer
        order:
          type: integer
      required:
      - quantity
      - product
      - order
